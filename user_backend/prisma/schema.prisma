// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Essence {
  id            String           @id @default(cuid())
  name          String          // e.g., "Childhood Wonder", "First Love", "Autumn Melancholy"
  description   String
  energySignature String        // The unique vibrational pattern of this essence
  manifestation Manifestation[]
  duration      DurationType    @default(EPHEMERAL)
  origin        String         // e.g., "Collective Unconscious", "Personal Memories"
  sideEffects   String[]       // e.g., ["Temporary Euphoria", "Heightened Awareness"]
  orders        Order[]
  cart          Cart?          @relation(fields: [cartId], references: [id])
  cartId        String?
}

model Manifestation {
  id            String    @id @default(cuid())
  intensity     String    // e.g., "mild", "moderate", "intense", "overwhelming"
  clarity       String    // e.g., "cloudy", "clear", "crystalline", "perfect"
  frequency     String    // e.g., "low", "medium", "high", "ultrahigh"
  essence       Essence   @relation(fields: [essenceId], references: [id])
  essenceId     String
  stock         String    // e.g., "out of stock", "limited", "available", "abundant"
  price         Float
}

model Cart {
  id        String     @id @default(cuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  items     Essence[]
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  address   String
  orders    Order[]
  cart      Cart?
  cartId    String?
}

model Order {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id])
  userId          String
  totalPrice      Float
  paymentStatus   String    @default("pending")
  orderStatus     String    @default("pending")
  items           Essence[]
}

enum DurationType {
  EPHEMERAL      // Lasts a moment
  TEMPORAL       // Lasts a day
  PERSISTENT     // Lasts a week
  ETERNAL        // Permanently changes the experiencer
}




