// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  slug        String    @unique
  products    Product[]
}

model Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  featured    Boolean         @default(false)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  category    Category        @relation(fields: [categoryId], references: [id])
  categoryId  Int
  variants    ProductVariant[]
  orders      Order[]
  cart        Cart?           @relation(fields: [cartId], references: [id])
  cartId      Int?
}

model ProductVariant {
  id        Int     @id @default(autoincrement())
  color     String?
  size      String?
  sku       String  @unique
  stock     Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Cart {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
  items     Product[]
}

model User {
  id   	Int  	@id @default(autoincrement())
  name     	String
  email    	String   @unique
  address  	String
  orders   	Order[]
  cart     	Cart?
  cartId   	Int?
}

model Order {
  id     	Int     	@id @default(autoincrement())
  user     	User    	@relation(fields: [userId], references: [id])
  userId   	Int
  totalPrice  	Float
  shippingAddress String
  paymentStatus   String  	@default("pending")
  orderStatus 	String  	@default("pending")
  items       	Product[]
}




